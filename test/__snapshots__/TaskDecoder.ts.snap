// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UnknownTaskDecoder UnknownArray 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "LeafE",
    "error": Object {
      "_tag": "UnknownArrayE",
      "actual": null,
    },
  },
}
`;

exports[`UnknownTaskDecoder UnknownRecord 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "LeafE",
    "error": Object {
      "_tag": "UnknownRecordE",
      "actual": null,
    },
  },
}
`;

exports[`UnknownTaskDecoder array should collect all errors 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "NextE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "OptionalIndexE",
              "error": Object {
                "_tag": "LeafE",
                "error": Object {
                  "_tag": "StringE",
                  "actual": 1,
                },
              },
              "index": 0,
            },
            Object {
              "_tag": "OptionalIndexE",
              "error": Object {
                "_tag": "LeafE",
                "error": Object {
                  "_tag": "StringE",
                  "actual": 2,
                },
              },
              "index": 1,
            },
          ],
          "name": "array",
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder array should reject an invalid input 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "PrevE",
        "error": Object {
          "_tag": "LeafE",
          "error": Object {
            "_tag": "UnknownArrayE",
            "actual": undefined,
          },
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder array should reject an invalid input 2`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "NextE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "OptionalIndexE",
              "error": Object {
                "_tag": "LeafE",
                "error": Object {
                  "_tag": "StringE",
                  "actual": 1,
                },
              },
              "index": 0,
            },
          ],
          "name": "array",
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder boolean 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "LeafE",
    "error": Object {
      "_tag": "BooleanE",
      "actual": null,
    },
  },
}
`;

exports[`UnknownTaskDecoder intersect should accumulate all errors 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "MemberE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "PrevE",
              "error": Object {
                "_tag": "CompoundE",
                "errors": Array [
                  Object {
                    "_tag": "PrevE",
                    "error": Object {
                      "_tag": "CompoundE",
                      "errors": Array [
                        Object {
                          "_tag": "NextE",
                          "error": Object {
                            "_tag": "UnexpectedKeysE",
                            "keys": Array [
                              "a",
                            ],
                          },
                        },
                      ],
                      "name": "composition",
                    },
                  },
                  Object {
                    "_tag": "NextE",
                    "error": Object {
                      "_tag": "MissingKeysE",
                      "keys": Array [
                        "b",
                      ],
                    },
                  },
                ],
                "name": "composition",
              },
            },
          ],
          "name": "composition",
        },
        "member": 1,
      },
    ],
    "name": "intersection",
  },
}
`;

exports[`UnknownTaskDecoder intersect should accumulate all errors 2`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "MemberE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "PrevE",
              "error": Object {
                "_tag": "CompoundE",
                "errors": Array [
                  Object {
                    "_tag": "PrevE",
                    "error": Object {
                      "_tag": "CompoundE",
                      "errors": Array [
                        Object {
                          "_tag": "NextE",
                          "error": Object {
                            "_tag": "UnexpectedKeysE",
                            "keys": Array [
                              "b",
                            ],
                          },
                        },
                      ],
                      "name": "composition",
                    },
                  },
                  Object {
                    "_tag": "NextE",
                    "error": Object {
                      "_tag": "MissingKeysE",
                      "keys": Array [
                        "a",
                      ],
                    },
                  },
                ],
                "name": "composition",
              },
            },
          ],
          "name": "composition",
        },
        "member": 0,
      },
    ],
    "name": "intersection",
  },
}
`;

exports[`UnknownTaskDecoder intersect should accumulate all errors 3`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "MemberE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "PrevE",
              "error": Object {
                "_tag": "CompoundE",
                "errors": Array [
                  Object {
                    "_tag": "NextE",
                    "error": Object {
                      "_tag": "MissingKeysE",
                      "keys": Array [
                        "a",
                      ],
                    },
                  },
                ],
                "name": "composition",
              },
            },
          ],
          "name": "composition",
        },
        "member": 0,
      },
      Object {
        "_tag": "MemberE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "PrevE",
              "error": Object {
                "_tag": "CompoundE",
                "errors": Array [
                  Object {
                    "_tag": "NextE",
                    "error": Object {
                      "_tag": "MissingKeysE",
                      "keys": Array [
                        "b",
                      ],
                    },
                  },
                ],
                "name": "composition",
              },
            },
          ],
          "name": "composition",
        },
        "member": 1,
      },
    ],
    "name": "intersection",
  },
}
`;

exports[`UnknownTaskDecoder lazy should return a left 1`] = `
"Errors:
1 error(s) found while decoding lazy decoder Category
└─ 1 error(s) found while decoding (struct)
   └─ 1 error(s) found while decoding required key \\"categories\\"
      └─ 1 error(s) found while decoding (array)
         └─ 1 error(s) found while decoding optional index 0
            └─ 1 error(s) found while decoding lazy decoder Category
               └─ 2 error(s) found while checking keys
                  ├─ missing required key \\"name\\"
                  └─ missing required key \\"categories\\""
`;

exports[`UnknownTaskDecoder literal should reject an invalid input 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "LeafE",
    "error": Object {
      "_tag": "LiteralE",
      "actual": "b",
      "literals": Array [
        "a",
        null,
      ],
    },
  },
}
`;

exports[`UnknownTaskDecoder mapLeft 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "LeafE",
    "error": Object {
      "_tag": "LeafE",
      "error": Object {
        "_tag": "NumberE",
        "actual": "a",
      },
    },
  },
}
`;

exports[`UnknownTaskDecoder nullable should reject an invalid input 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "NullableE",
    "error": Object {
      "_tag": "ParseE",
      "error": Object {
        "_tag": "LeafE",
        "error": Object {
          "_tag": "StringE",
          "actual": undefined,
        },
      },
    },
  },
}
`;

exports[`UnknownTaskDecoder nullable should reject an invalid input 2`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "NullableE",
    "error": Object {
      "_tag": "ParseE",
      "error": Object {
        "_tag": "LeafE",
        "error": Object {
          "_tag": "NumberFromStringE",
          "actual": "a",
        },
      },
    },
  },
}
`;

exports[`UnknownTaskDecoder number 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "LeafE",
    "error": Object {
      "_tag": "NumberE",
      "actual": null,
    },
  },
}
`;

exports[`UnknownTaskDecoder partial should collect all errors 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "NextE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "OptionalKeyE",
              "error": Object {
                "_tag": "LeafE",
                "error": Object {
                  "_tag": "StringE",
                  "actual": 1,
                },
              },
              "key": "a",
            },
            Object {
              "_tag": "OptionalKeyE",
              "error": Object {
                "_tag": "LeafE",
                "error": Object {
                  "_tag": "NumberE",
                  "actual": "b",
                },
              },
              "key": "b",
            },
          ],
          "name": "partial",
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder partial should reject an invalid input 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "PrevE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "PrevE",
              "error": Object {
                "_tag": "LeafE",
                "error": Object {
                  "_tag": "UnknownRecordE",
                  "actual": undefined,
                },
              },
            },
          ],
          "name": "composition",
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder partial should reject an invalid input 2`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "NextE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "OptionalKeyE",
              "error": Object {
                "_tag": "LeafE",
                "error": Object {
                  "_tag": "StringE",
                  "actual": 1,
                },
              },
              "key": "a",
            },
          ],
          "name": "partial",
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder partial should strip additional fields 1`] = `
Object {
  "_tag": "Both",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "PrevE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "NextE",
              "error": Object {
                "_tag": "UnexpectedKeysE",
                "keys": Array [
                  "b",
                ],
              },
            },
          ],
          "name": "composition",
        },
      },
    ],
    "name": "composition",
  },
  "right": Object {
    "a": "a",
  },
}
`;

exports[`UnknownTaskDecoder record should collect all errors 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "NextE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "OptionalKeyE",
              "error": Object {
                "_tag": "LeafE",
                "error": Object {
                  "_tag": "NumberE",
                  "actual": "a",
                },
              },
              "key": "a",
            },
            Object {
              "_tag": "OptionalKeyE",
              "error": Object {
                "_tag": "LeafE",
                "error": Object {
                  "_tag": "NumberE",
                  "actual": "b",
                },
              },
              "key": "b",
            },
          ],
          "name": "record",
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder record should reject an invalid value 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "PrevE",
        "error": Object {
          "_tag": "LeafE",
          "error": Object {
            "_tag": "UnknownRecordE",
            "actual": undefined,
          },
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder record should reject an invalid value 2`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "NextE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "OptionalKeyE",
              "error": Object {
                "_tag": "LeafE",
                "error": Object {
                  "_tag": "NumberE",
                  "actual": "a",
                },
              },
              "key": "a",
            },
          ],
          "name": "record",
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder refine should reject an invalid input 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "RefinementE",
    "error": Object {
      "_tag": "LeafE",
      "error": Object {
        "_tag": "StringE",
        "actual": undefined,
      },
    },
  },
}
`;

exports[`UnknownTaskDecoder refine should reject an invalid input 2`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "LeafE",
    "error": Object {
      "_tag": "RefinementL",
      "actual": "",
    },
  },
}
`;

exports[`UnknownTaskDecoder string 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "LeafE",
    "error": Object {
      "_tag": "StringE",
      "actual": null,
    },
  },
}
`;

exports[`UnknownTaskDecoder struct should collect all errors 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "PrevE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "NextE",
              "error": Object {
                "_tag": "MissingKeysE",
                "keys": Array [
                  "a",
                  "b",
                ],
              },
            },
          ],
          "name": "composition",
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder struct should reject an invalid input 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "PrevE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "PrevE",
              "error": Object {
                "_tag": "CompoundE",
                "errors": Array [
                  Object {
                    "_tag": "PrevE",
                    "error": Object {
                      "_tag": "LeafE",
                      "error": Object {
                        "_tag": "UnknownRecordE",
                        "actual": undefined,
                      },
                    },
                  },
                ],
                "name": "composition",
              },
            },
          ],
          "name": "composition",
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder struct should reject an invalid input 2`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "NextE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "RequiredKeyE",
              "error": Object {
                "_tag": "LeafE",
                "error": Object {
                  "_tag": "StringE",
                  "actual": 1,
                },
              },
              "key": "a",
            },
          ],
          "name": "struct",
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder struct should strip additional fields 1`] = `
Object {
  "_tag": "Both",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "PrevE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "PrevE",
              "error": Object {
                "_tag": "CompoundE",
                "errors": Array [
                  Object {
                    "_tag": "NextE",
                    "error": Object {
                      "_tag": "UnexpectedKeysE",
                      "keys": Array [
                        "b",
                      ],
                    },
                  },
                ],
                "name": "composition",
              },
            },
          ],
          "name": "composition",
        },
      },
    ],
    "name": "composition",
  },
  "right": Object {
    "a": "a",
  },
}
`;

exports[`UnknownTaskDecoder sum should reject an invalid input 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "PrevE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "MemberE",
              "error": Object {
                "_tag": "LeafE",
                "error": Object {
                  "_tag": "UnknownRecordE",
                  "actual": null,
                },
              },
              "member": 0,
            },
            Object {
              "_tag": "MemberE",
              "error": Object {
                "_tag": "LeafE",
                "error": Object {
                  "_tag": "UnknownArrayE",
                  "actual": null,
                },
              },
              "member": 1,
            },
          ],
          "name": "union",
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder sum should reject an invalid input 2`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "NextE",
        "error": Object {
          "_tag": "LeafE",
          "error": Object {
            "_tag": "TagE",
            "literals": Array [
              "A",
              "B",
            ],
            "tag": "_tag",
          },
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder sum should reject an invalid input 3`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "NextE",
        "error": Object {
          "_tag": "SumE",
          "error": Object {
            "_tag": "MemberE",
            "error": Object {
              "_tag": "CompoundE",
              "errors": Array [
                Object {
                  "_tag": "NextE",
                  "error": Object {
                    "_tag": "CompoundE",
                    "errors": Array [
                      Object {
                        "_tag": "RequiredKeyE",
                        "error": Object {
                          "_tag": "LeafE",
                          "error": Object {
                            "_tag": "StringE",
                            "actual": 1,
                          },
                        },
                        "key": "a",
                      },
                    ],
                    "name": "struct",
                  },
                },
              ],
              "name": "composition",
            },
            "member": "A",
          },
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder sum should support empty records 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "NextE",
        "error": Object {
          "_tag": "LeafE",
          "error": Object {
            "_tag": "TagE",
            "literals": Array [],
            "tag": "_tag",
          },
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder tuple should collect all errors 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "NextE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "RequiredIndexE",
              "error": Object {
                "_tag": "LeafE",
                "error": Object {
                  "_tag": "StringE",
                  "actual": 1,
                },
              },
              "index": 0,
            },
            Object {
              "_tag": "RequiredIndexE",
              "error": Object {
                "_tag": "LeafE",
                "error": Object {
                  "_tag": "NumberE",
                  "actual": "a",
                },
              },
              "index": 1,
            },
          ],
          "name": "tuple",
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder tuple should reject an invalid input 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "PrevE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "PrevE",
              "error": Object {
                "_tag": "CompoundE",
                "errors": Array [
                  Object {
                    "_tag": "PrevE",
                    "error": Object {
                      "_tag": "LeafE",
                      "error": Object {
                        "_tag": "UnknownArrayE",
                        "actual": undefined,
                      },
                    },
                  },
                ],
                "name": "composition",
              },
            },
          ],
          "name": "composition",
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder tuple should reject an invalid input 2`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "PrevE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "NextE",
              "error": Object {
                "_tag": "MissingIndexesE",
                "indexes": Array [
                  1,
                ],
              },
            },
          ],
          "name": "composition",
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder tuple should reject an invalid input 3`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "NextE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "RequiredIndexE",
              "error": Object {
                "_tag": "LeafE",
                "error": Object {
                  "_tag": "StringE",
                  "actual": 1,
                },
              },
              "index": 0,
            },
          ],
          "name": "tuple",
        },
      },
    ],
    "name": "composition",
  },
}
`;

exports[`UnknownTaskDecoder tuple should strip additional components 1`] = `
Object {
  "_tag": "Both",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "PrevE",
        "error": Object {
          "_tag": "CompoundE",
          "errors": Array [
            Object {
              "_tag": "PrevE",
              "error": Object {
                "_tag": "CompoundE",
                "errors": Array [
                  Object {
                    "_tag": "NextE",
                    "error": Object {
                      "_tag": "UnexpectedIndexesE",
                      "indexes": Array [
                        2,
                      ],
                    },
                  },
                ],
                "name": "composition",
              },
            },
          ],
          "name": "composition",
        },
      },
    ],
    "name": "composition",
  },
  "right": Array [
    "a",
    1,
  ],
}
`;

exports[`UnknownTaskDecoder union should reject an invalid input 1`] = `
Object {
  "_tag": "Left",
  "left": Object {
    "_tag": "CompoundE",
    "errors": Array [
      Object {
        "_tag": "MemberE",
        "error": Object {
          "_tag": "LeafE",
          "error": Object {
            "_tag": "StringE",
            "actual": true,
          },
        },
        "member": 0,
      },
      Object {
        "_tag": "MemberE",
        "error": Object {
          "_tag": "LeafE",
          "error": Object {
            "_tag": "NumberE",
            "actual": true,
          },
        },
        "member": 1,
      },
    ],
    "name": "union",
  },
}
`;
